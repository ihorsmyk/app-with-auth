{"version":3,"file":"static/js/732.950627de.chunk.js","mappings":"gRAsDA,EA9Cc,WACZ,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0CC,EAAAA,EAAAA,YAAWC,EAAAA,GAA7CC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,SAEvBC,EAAU,mCAAG,oGAEfF,GAAa,GAFE,UAGYG,EAAAA,EAAAA,MAHZ,OAGTC,EAHS,OAIfV,EAASU,GAJM,gDAMfH,EAAS,KAAII,SANE,yBAQfL,GAAa,GARE,4EAAH,qDAqBhB,OATAM,EAAAA,EAAAA,YAAU,WACRJ,GACD,GAAE,KAEHI,EAAAA,EAAAA,YAAU,WACHP,GACLQ,EAAAA,OAAAA,QAAA,6BAAqCR,GACtC,GAAE,CAACA,KAGF,eAAIS,UAAU,QAAd,SACGC,MAAMC,QAAQjB,KAAd,OACCA,QADD,IACCA,OADD,EACCA,EAAOkB,KAAI,SAAAC,GACT,OACE,eAAkBJ,UAAU,cAA5B,UACE,SAAC,KAAD,CACEK,MAAO,CAAEC,KAAMnB,GACfoB,GAAIC,OAAOJ,EAAKK,IAChBT,UAAU,cAHZ,UAKE,eAAIA,UAAU,eAAd,gBAA8BI,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAMM,WAN/BN,EAAKK,GAUjB,MAGR,C,iKClDKE,E,QAAqBC,EAAAA,OAAa,CACtCC,QAAS,0CAGElB,EAAQ,mCAAG,sGACCgB,EAAmBG,IAAI,SADxB,uBACdC,EADc,EACdA,KADc,kBAEfA,GAFe,2CAAH,qDAKRC,EAAW,mCAAG,WAAMP,GAAN,yFACFE,EAAmBG,IAAnB,gBAAgCL,IAD9B,uBACjBM,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,sDAKXE,EAAQ,mCAAG,sGACCN,EAAmBG,IAAI,SADxB,uBACdC,EADc,EACdA,KADc,kBAEfA,GAFe,2CAAH,qDAKRG,EAAW,mCAAG,WAAMT,GAAN,yFACFE,EAAmBG,IAAnB,gBAAgCL,IAD9B,uBACjBM,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,qD","sources":["pages/Posts/Posts.jsx","services/API.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport { useContext, useEffect, useState } from 'react';\nimport { getPosts } from 'services/API';\nimport { Context } from '../../context';\nimport { Notify } from 'notiflix';\n\nimport './Posts.scss';\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n  const location = useLocation();\n  const { error, setIsLoading, setError } = useContext(Context);\n\n  const fetchPosts = async () => {\n    try {\n      setIsLoading(true);\n      const fetchedPosts = await getPosts();\n      setPosts(fetchedPosts);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  useEffect(() => {\n    if (!error) return;\n    Notify.failure(`some error occured ${error}`);\n  }, [error]);\n\n  return (\n    <ul className=\"posts\">\n      {Array.isArray(posts) &&\n        posts?.map(post => {\n          return (\n            <li key={post.id} className=\"posts__item\">\n              <Link\n                state={{ from: location }}\n                to={String(post.id)}\n                className=\"posts__link\"\n              >\n                <h2 className=\"posts__title\">{post?.title}</h2>\n              </Link>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nexport default Posts;\n","import axios from 'axios';\n\nconst jsonplaceholderAPI = axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com/',\n});\n\nexport const getPosts = async () => {\n  const { data } = await jsonplaceholderAPI.get('posts');\n  return data;\n};\n\nexport const getPostInfo = async id => {\n  const { data } = await jsonplaceholderAPI.get(`posts/${id}`);\n  return data;\n};\n\nexport const getUsers = async () => {\n  const { data } = await jsonplaceholderAPI.get('users');\n  return data;\n};\n\nexport const getUserInfo = async id => {\n  const { data } = await jsonplaceholderAPI.get(`users/${id}`);\n  return data;\n};\n"],"names":["useState","posts","setPosts","location","useLocation","useContext","Context","error","setIsLoading","setError","fetchPosts","getPosts","fetchedPosts","message","useEffect","Notify","className","Array","isArray","map","post","state","from","to","String","id","title","jsonplaceholderAPI","axios","baseURL","get","data","getPostInfo","getUsers","getUserInfo"],"sourceRoot":""}